- name: create ec2 and r53
  hosts: local
  connection: local
  vars:
   subnet_id: "subnet-0b49346919c8a4222"
   sg_id: "sg-0ba969f3e22a48b24"
   ami_id: "ami-09c813fb71547fc4f"    
   instances:
    - mysql
    - backend
    - frontend
   zone: learningdevops.shop
  tasks:   
  - name: install boto3 and botocore
    ansible.builtin.pip:
     name:
     - boto3
     - botocore
     executable: pip3.9  
  - name: create ec2 instance
    amazon.aws.ec2_instance:
     name: "{{ item }}"
     vpc_subnet_id: "{{ subnet_id }}"
     instance_type: "t2.micro"
     security_group: "{{ sg_id }}"
     image_id: "{{  ami_id }}"
    loop: "{{ instances }}"
    register: ec2_instances

  - name: print the output
    ansible.builtin.debug:
      msg: "{{ ec2_instances }}"  
 
  - name: create r53 private record
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}"  #mysql.learningdevops.shop
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true  
      overwrite: true
    loop: "{{ ec2_instances.results }}"     

  - name: create r53 public record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}" #learningdevops.shop
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"
    when: item.item == "frontend" #when keyword should not have {{}}  
